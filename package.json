{
  "name": "restnest-openapi",
  "license": "BSD-2-Clause",
  "author": "Don Swinscoe <dswinscoe@gmail.com>",
  "version": "1.0.0",
  "description": "Postman-based framework for testing multi-repo, OpenAPI-REST-service-based requests in complex automated user journey scenarios (using Postman Runner), as well as, manual spot tests or easy test data creation",
  "packageManager": "yarn@1.22.21",
  "scripts": {
    "restnest:start": "yarn && yarn restnest:startDev",
    "restnest:startDev": "yarn restnest:postman-sync-repo && yarn restnest:e2e-sync && yarn restnest:startServer",
    "restnest:startRepoRefresh": "yarn && yarn restnest:postman-sync-repo-git-main && yarn restnest:postman-sync-repo-collection && yarn restnest:postman-sync-repo-workspace && yarn restnest:postman-sync-repo-services-collection && yarn restnest:e2e-sync-main",
    "restnest:postman-sync-repo": "yarn restnest:postman-sync-repo-git && yarn restnest:postman-prep-repo && yarn restnest:postman-sync-repo-collection && yarn restnest:postman-sync-repo-workspace && yarn restnest:postman-sync-repo-services-collection",
    "restnest:postman-sync-repo-git": "cd scripts && node --max-old-space-size=4096 restnest-postman-sync-repo.js",
    "restnest:postman-sync-repo-git-main": "cd scripts ; node --max-old-space-size=4096 restnest-postman-sync-repo.js --gitFeatureOverride=refresh/main",
    "restnest:postman-prep-repo": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-postman-prep-repo.js",
    "restnest:postman-sync-repo-collection": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-postman-sync-collection.js --standalone",
    "restnest:postman-sync-repo-workspace": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-postman-sync-workspace.js",
    "restnest:postman-sync-repo-services-collection": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-postman-sync-services-collection.js",
    "restnest:e2e-sync": "yarn restnest:e2e-sync-workspace && yarn restnest:e2e-sync-collection && yarn restnest:e2e-sync-environment",
    "restnest:e2e-sync-main": "yarn restnest:e2e-sync-workspace && yarn restnest:e2e-sync-collection-main-only && yarn restnest:e2e-sync-environment-main-only",
    "restnest:e2e-sync-workspace": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-workspace.js",
    "restnest:e2e-sync-collection": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-collection.js",
    "restnest:e2e-sync-collection-download": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-collection.js --downloadonly",
    "restnest:e2e-sync-collection-main-only": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-collection.js --mainonly",
    "restnest:e2e-sync-environment": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-environment.js",
    "restnest:e2e-sync-environment-main-only": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-environment.js --mainonly",
    "restnest:e2e-sync-scenario-suite": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-e2e-sync-scenario-suite.js",
    "restnest:e2e-run-scenario-suite-example": "npx grunt runSuite --folderId=6cc9e2ce-6e8e-4caf-807a-14c6998e5df7 --env=SANDBOX --collection=main",
    "restnest:e2e-run-scenario-debug": "cd scripts/newman &&  node --max-old-space-size=4096 restnest-scenario-suite.js --scenario0=scripts/nestServer/triggers/303bd1d9-41de-4f2c-8134-eda833c880bc_scenario.json",
    "restnest:startServer": "npx grunt",
    "restnest:startServerDebug": "npx grunt scenarioServerDebug",
    "restnest:clean": "git clean -d -x -f -e '*.postman_globals.json'",
    "restnest:clean:dry-run": "git clean -n -d -x -e '*.postman_globals.json'",
    "gcp:checkPostmanApiKey": "node scripts/gcp/postmanApiKeycheck.js",
    "openapi:generate-specs": "cd openapi/postman/scripts && node --max-old-space-size=4096 generate-swagger-parser.js -s",
    "pqas:importStudioTopics": "cd data/scripts/predefinedQAs && node importStudioTopics.js",
    "dnas:convertDataSet": "cd data/scripts/doNotAnwer && node convertDataSet.js"
  },
  "// scripts explanation": {
    "restnest:start": "0. Main script to update npm dependencies and initiate restnest:startDev for Postman development workspace setup (1)",
    "restnest:startDev": "1. Runs restnest:postman-sync scripts to download postman repo artifacts (2), restnest:e2e-sync scripts to synchronize Postman RESTNEST workspaces (3), and start ScenarioServer (4)",
    "restnest:startRepoRefresh": "0.-1. Pipeline run of postman repo and main fork sync for daily refresh",
    "restnest:postman-sync-repo": "2. Initiates repo sync to configure, load and run Newman collections to download Postman repo artifacts",
    "restnest:postman-sync-repo-git": "2.1. Determines Azure TaskId from git feature branch name, retrieves Postman API credentials, and stores in restnest-postman.postman_globals.json",
    "restnest:postman-sync-repo-git-main": "2.1 TEST-ONLY: simulate main branch",
    "restnest:postman-prep-repo": "2.2. On Initial call, create new 'Postman Repo' with git repo fork name and fork all collections from Postman restnest-openapi workspace",
    "restnest:postman-sync-repo-collection": "2.3. Runs Newman WorkspaceSyncLoader to download WorkspaceSync collection from Postman repo workspace for restnest:e2e scripts",
    "restnest:postman-sync-repo-workspace": "2.4. Runs Newman on WorkspaceSync collection's Repo-Download folder to download newest repo collections and environments",
    "restnest:postman-sync-repo-services-collection": "2.5. Augments services collection with most current services and uploads with WorkspaceSync collection's Repo-Upload folder",
    "restnest:e2e-sync": "3. Creates and synchronizes Postman workspaces, collections and environments for dev workspace",
    "restnest:e2e-sync-main": "3. Creates and synchronizes Postman workspaces, collections and environments for main workspace only (see restnest:startRepoRefresh)",
    "restnest:e2e-sync-workspace": "3.1. Newman WorkspaceSync run to create and synchronize Postman E2E workspaces, e.g. restnest-e2e, etc. ",
    "restnest:e2e-sync-collection": "3.2. Newman WorkspaceSync run to create initially, and otherwise augment and sync main and development restnest-e2e collections",
    "restnest:e2e-sync-collection-download": "Newman WorkspaceSync run to only download current developer collection (Quick Sync) - also triggered in Grunt by ScenarioServer request in Postman",
    "restnest:e2e-sync-collection-main-only": "Newman WorkspaceSync run for main workspace only",
    "restnest:e2e-sync-environment": "3.3. Newman WorkspaceSync run to delete and re-create collated environments for all services (development workspace only if not admin)",
    "restnest:e2e-sync-environment-main-only": "Newman WorkspaceSync run for main workspace only",
    "restnest:e2e-sync-scenario-suite": "LOCAL RUN REQUIRED ON NEW INSTANCE: get environment globals and download main collection and environments for scenario suite run - triggered in Grunt by ScenarioServer request in Postman",
    "restnest:e2e-run-scenario-suite-example": "Scenario suite example - for debugging - change folderId for scenario suite folder to run",
    "restnest:e2e-run-scenario-debug": "Scenario runner for debugging - requires existing trigger file - run in debug mode after restnest:startServerDebug",
    "restnest:startServer": "4. Grunt watch initializer, ScenarioServer starter",
    "restnest:startServerDebug": "Same as restnest:startServer, in debug mode for testing with Postman",
    "restnest:clean": "Removes all git untracked files from the project",
    "restnest:clean:dry-run": "Displays files to be deleted in restnest:clean",
    "openapi:generate-specs": "Generates from ./openapi/config json or yaml specs, de-referenced yaml files in ./openapi/generated-specs for use in ./openapi/postman publishing sub-project"
  },
  "dependencies": {
    "@faker-js/faker": "7.4.0",
    "@google-cloud/secret-manager": "^4.0.0",
    "commander": "10.0.0",
    "convert-csv-to-json": "^2.46.0",
    "convert-excel-to-json": "^1.7.0",
    "deep-diff": "^1.0.2",
    "express": "4.18.1",
    "flat": "5.0.2",
    "fs": "0.0.1-security",
    "get-value": "3.0.1",
    "grunt": "1.5.3",
    "grunt-cli": "1.4.3",
    "grunt-contrib-clean": "2.0.1",
    "grunt-contrib-watch": "1.1.0",
    "grunt-env": "1.0.1",
    "grunt-express-server": "0.5.4",
    "grunt-run": "0.8.1",
    "js-yaml": "4.1.0",
    "json-schema-faker": "0.5.0-rcv.42",
    "lodash": "4.17.21",
    "multer": "1.4.4",
    "newman": "6.1.0",
    "newman-reporter-htmlextra": "1.23.0",
    "prettier": "2.8.2",
    "prompt-sync": "^4.2.0",
    "rimraf": "3.0.2",
    "set-value": "4.1.0",
    "unset-value": "^2.0.1",
    "uuid": "8.3.2",
    "xml-js": "1.6.11"
  }
}